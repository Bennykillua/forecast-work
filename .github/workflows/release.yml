name: Release

on:
  push:
    tags:
      - "*"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  package_exec_for_windows:
    runs-on: windows-2022
    needs: lint

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
      - name: Create Executable
        run: |
          pyinstaller --clean --distpath="dist" --name="Agile Forecasting.exe" --onefile ./src/app.py
      - name: Upload executable
        uses: actions/upload-artifact@v2
        with:
          name: Release Candidate Executable for Windows
          path: "dist/Agile Forecasting.exe"

  package_exec_for_linux:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
      - name: Create Executable
        run: |
          pyinstaller \
            --add-data="README.md:." \
            --clean \
            --distpath="dist" \
            --name="Agile Forecasting" \
            --onefile \
            ./src/app.py
      - name: Upload executable
        uses: actions/upload-artifact@v2
        with:
          name: Release Candidate Executable for Linux
          path: "dist/Agile Forecasting"

  release:
    needs:
      - package_exec_for_windows
      - package_exec_for_linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - uses: actions/download-artifact@master
        with:
          name: Release Candidate Executable for Windows
          path: "dist/Agile Forecasting.exe"
      - uses: actions/download-artifact@master
        with:
          name: Release Candidate Executable for Linux
          path: "dist/Agile Forecasting"
      - name: Upload Windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/Agile Forecasting.exe
          asset_name: Agile_Forecasting_for_Windows.exe
          asset_content_type: application/octet-stream
      - name: Upload Linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/Agile Forecasting
          asset_name: Agile_Forecasting_for_Linux
          asset_content_type: application/octet-stream.
